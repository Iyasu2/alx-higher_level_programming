``matrix_divided`` returns the division of its arguments, where one argument 
is a matrix and the other is an int/float div.

::

    >>> import importlib

    >>> module = importlib.import_module('2-matrix_divided')
    >>> matrix_divided = module.matrix_divided
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

matrix must be a list of lists of integers or floats, otherwise raise a TypeError 
exception with the message matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix_1 = [
    ...     (1, 2, 3),
    ...     [4, 5, 'c']
    ... ]
    >>> matrix_divided(matrix_1, 5)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_101 = [
    ...     [1, 2, 3],
    ...     [4, 5, 'c']
    ... ]
    >>> matrix_divided(matrix_101, 5)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row of the matrix must be of the same size, otherwise raise a TypeError 
exception with the message Each row of the matrix must have the same size

::

    >>> matrix_2 = [
    ...     [1, 2, 3, 10],
    ...     [4, 5, 7]
    ... ]
    >>> matrix_divided(matrix_2, 10)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

div must be a number (integer or float), otherwise raise a TypeError 
exception with the message div must be a number

::

    >>> matrix_3 = [
    ...     [1, 2, 3, 10],
    ...     [4, 5, 7, 8]
    ... ]
    >>> matrix_divided(matrix_3, 'r')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError 
exception with the message division by zero

::

    >>> matrix_4 = [
    ...     [1, 2, 3, 3000],
    ...     [4, 5, 7, -200]
    ... ]
    >>> matrix_divided(matrix_4, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

the function can only be called with two arguments

::

    >>> matrix_5 = [
    ...     [1, 2, 3, 3000],
    ...     [4, 5, 7, -200]
    ... ]
    >>> matrix_divided(matrix_5)
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

::

    >>> matrix_divided()
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

when divided by infinity, the matrix should all be 0

::

    >>> matrix_6 = [
    ...     [1, 2, 3, 3000],
    ...     [4, 5, 7, -200]
    ... ]
    >>> matrix_divided(matrix_6, float("inf"))
    [[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, -0.0]]